name: Build Release from tag

on:
  push:
    tags:
      - "*.*.*"

jobs:
  
  # build-linux-deb:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: setup python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.10'
  #     - name: checkout repository
  #       uses: actions/checkout@v3
  #     - name: configure ai s3 secrets
  #       run: |
  #         echo "endpoint = \"$ai_s3_endpoint\"" >> ./graxpert/s3_secrets.py && \
  #         echo "ro_access_key = \"$ai_s3_access_key\"" >> ./graxpert/s3_secrets.py && \
  #         echo "ro_secret_key = \"$ai_s3_secret_key\"" >> ./graxpert/s3_secrets.py && \
  #         echo "bucket_name = \"$ai_s3_bucket_name\"" >> ./graxpert/s3_secrets.py && \
  #         echo "bge_bucket_name = \"$ai_s3_bge_bucket_name\"" >> ./graxpert/s3_secrets.py && \
  #         echo "denoise_bucket_name = \"$ai_s3_denoise_bucket_name\"" >> ./graxpert/s3_secrets.py
  #     - name: install dependencies
  #       run: |
  #         sudo apt install alien -y && \
  #         pip install "cx_freeze" && \
  #         pip install onnxruntime-gpu && \
  #         pip install -r requirements.txt
  #     - name: patch version
  #       run: |
  #         chmod u+x ./releng/patch_version.sh && \
  #         ./releng/patch_version.sh
  #     - name: create GraXpert-linux bundle
  #       run: python ./setup.py bdist_deb
  #     - name: store artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: graxpert_${{github.ref_name}}-1_amd64.deb
  #         path: ./dist/graxpert_${{github.ref_name}}-1_amd64.deb
  #         retention-days: 5
  
  # build-linux-zip:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: setup python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.10'
  #     - name: checkout repository
  #       uses: actions/checkout@v3
  #     - name: install dependencies
  #       run: |
  #         pip install setuptools wheel cx_freeze && \
  #         pip install -r requirements.txt
  # #    - name: patch version
  # #      run: |
  # #        chmod u+x ./releng/patch_version.sh && \
  # #        ./releng/patch_version.sh
  #     - name: create ImagingSessionAnalysis-linux bundle
  #       run: python ./setup.py install_exe --install-dir=./dist/ImagingSessionAnalysis-linux
  #     - name: zip ImagingSessionAnalysis-linux bundle
  #       run: |
  #         cd ./dist && \
  #         zip -r ./ImagingSessionAnalysis-linux.zip ./ImagingSessionAnalysis-linux
  #     - name: store artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ImagingSessionAnalysis-linux.zip
  #         path: ./dist/ImagingSessionAnalysis-linux.zip
  #         retention-days: 5

  build-windows:
    runs-on: windows-latest
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: checkout repository
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          pip install setuptools wheel cx_freeze; `
          pip install -r requirements.txt
  #    - name: patch version
  #      run: ./releng/patch_version.ps1
      - name: create ImagingSessionAnalysis-win64 bundle
        run: pyinstaller .\ImagingSessionAnalysis-Win.spec
      - name: zip Windows dist
        run: Compress-Archive -Path dist/ImagingSessionAnalysis -Destination ImagingSessionAnalysis-${{github.ref_name}}win.zip
      - name: store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ImagingSessionAnalysis-${{github.ref_name}}-win.zip
          path: ./dist/ImagingSessionAnalysis-${{github.ref_name}}-win.zip
          retention-days: 5

  build-macos-x86_64:
    runs-on: macos-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      # github actions overwrites brew's python. Force it to reassert itself, by running in a separate step.
      - name: unbreak python in github actions
        run: |
         find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
         sudo rm -rf /Library/Frameworks/Python.framework/
         brew install --force python3 && brew unlink python3 && brew unlink python3 && brew link --overwrite python3
      - name: create venv
        run: python3 -m venv . && scripts/activate
      - name: install dependencies
        run: |
          scripts/activate && \
          pip3 install setuptools wheel pyinstaller && \
          pip3 install -r requirements.txt
  #    - name: patch version
  #      run: |
  #        chmod u+x ./releng/patch_version.sh && \
  #        ./releng/patch_version.sh
      - name: create ImagingSessionAnalysis-macos-x86_64 bundle
        # TODO migrate to cx_freeze
        run: |
          scripts/activate &&
          pyinstaller ./ImagingSessionAnalysis-macOS.spec
      - name: install create-dmg
        run: brew install create-dmg
      - name: prep dmg directory
        run: |
          mkdir -p dist/dmg && `
          rm -rf dist/dmg/* && `
          cp -r "dist/ImagingSessionAnalysis.app" dist/dmg
      - name: create .dmg
        run: |
          create-dmg \
            --volname "ImagingSessionAnalysis" \
            --volicon "src/Icons/AppIcon.ico" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "ImagingSessionAnalysis.app" 175 120 \
            --hide-extension "ImagingSessionAnalysis.app" \
            --app-drop-link 425 120 \
            --hdiutil-verbose \
            "dist/ImagingSessionAnalysis.dmg" \
            "dist/dmg/"
      - name: store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ImagingSessionAnalysis-macos-x86_64.dmg
          path: ./dist/ImagingSessionAnalysis-macos-x86_64.dmg
          retention-days: 5

  release:
    runs-on: ubuntu-latest
    # needs: [build-linux-deb, build-linux-zip, build-windows, build-macos-x86_64]
    needs: [build-windows, build-macos-x86_64]
    steps:
      # - name: download linux deb
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: imagingsessionanalysis_${{github.ref_name}}-1_amd64.deb
      # - name: download linux zip
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: ImagingSessionAnalysis-linux.zip
      - name: download windows exe
        uses: actions/download-artifact@v2
        with:
          name: ImagingSessionAnalysis-${{github.ref_name}}-win.zip
      - name: download macos artifacts
        uses: actions/download-artifact@v2
        with:
          name: ImagingSessionAnalysis-macos-x86_64.dmg
      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ImagingSessionAnalysis-${{github.ref_name}}-win64.msi
            ImagingSessionAnalysis-macos-x86_64.dmg
      #      imagingsessionanalysis_${{github.ref_name}}-1_amd64.deb
      #      ImagingSessionAnalysis-linux.zip
